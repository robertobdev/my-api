# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Address {
  id: Int!
  personId: Int!
  person: Person!
  street: String!
  number: String!
  zipcode: String!
  neighborhood: String!
  complement: String
  city: String!
  state: String!
  country: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Contact {
  id: Int!
  personId: Int!
  person: Person!
  contactType: String!
  value: String!
  complement: String
  created_at: DateTime!
  updated_at: DateTime!
}

type Modules {
  id: Int!
  acl: Acl!
  title: String!
  router: String!
  description: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Acl {
  id: Int!
  roleId: Int!
  role: Role!
  moduleId: Int!
  module: Modules!
  isShow: Boolean!
  isGet: Boolean!
  isPost: Boolean!
  isUpdate: Boolean!
  isDelete: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Role {
  id: Int!
  description: String!
  users: [User!]!
  acl: Acl!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type User {
  id: Int!
  personId: Int!
  person: Person!
  login: String!
  rememberToken: String
  roles: [Role!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Person {
  id: Int!
  name: String!
  cpf: String!
  email: String!
  birthday: DateTime!
  gender: String!
  avatar: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  user: User!
  addresses: [Address!]!
  contacts: [Contact!]!
}

type AclEdge {
  cursor: String!
  node: Acl!
}

type AclResponse {
  edges: [AclEdge!]
  nodes: [Acl!]
  totalCount: Int!
  hasNextPage: Boolean
}

type Query {
  person(id: Int!): Person!
  acls(crudList: CrudListInputs!): AclResponse!
  acl(id: Int!): Acl!
}

input CrudListInputs {
  limit: Int = 10
  page: Int = 1
  field: String = "id"
  order: String = "ASC"
  filter: String = ""
}
